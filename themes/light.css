/*
 Fist declaration of Font variables, this will be changed by your Font files.
 The $rootFontSize is used for scaling fonts.
 Once this is set for a font you can then use rems in your SCSS to get the desired font size.
 Example: With $rootFontSize set to 1.238px for the Oswald font,
 and an rem of 30 for the font size you end up with a font size 30px on your screen.
*/
/* 
 The function setStyle will set the value of the css style in the file based on the $fileID.
 Example:
 body {
   display: setStyle('main', grid);
   place-items: setStyle('main', center);
   margin: setStyle('main', 0px);
   padding: setStyle('main', 0px);
   height: setStyle('main', 100%);
   color: setStyle('theme', $onBackground);
   background-color: setStyle('theme', $background);
   @include setFont($fontMap, normal, normal, null);
 }
*/
/* 
 This mixin is used to set the font family, weight, style, and size
 of an style element.

 @param $fontItem   - Used to set the font-family of a style element
                      and can accept a single font or a font map.
 @param $fontWeight - Used to set the font-weight of a style element.
 @param $fontStyle  - Used to set the font-style of a style element.
 @param $fontSize   - Used to set the font-size and line-height of a style element.
                      The output will either be a clamp function or your input font size.
 */
body {
  color: #000000;
  background-color: #FFFFFF;
}

a {
  color: #000000;
}
a:hover, a:focus {
  color: #6896cc;
}

.container {
  color: #000000;
  background-color: #FFFFFF;
}

@media screen and (min-width: 700px) {
  .container {
    color: #000000;
    background-color: #9ac6ff;
  }
}
.line {
  border-bottom: 2px solid #000000;
}

.demoHeader {
  color: #000000;
}
.demoSubHeader {
  color: #000000;
}
.demoText {
  color: #000000;
}
.exampleText {
  background-color: #9ac6ff;
}
@media screen and (min-width: 700px) {
  .exampleText {
    background-color: #FFFFFF;
  }
}
.codeText {
  color: #000000;
  background-color: #9ac6ff;
}
.codeText b {
  text-decoration: underline;
}

@media screen and (min-width: 700px) {
  .codeText {
    background-color: #FFFFFF;
  }
}
.demoList {
  color: #000000;
}
.demoList li {
  color: #000000;
}
.nav {
  border-top: 2px solid #000000;
  color: #000000;
  background-color: #9ac6ff;
}
.nav-title {
  color: #000000;
}
.nav-item {
  color: #000000;
  background-color: #47a0f3;
}
.nav-item:focus, .nav-item:hover {
  color: #006d8f;
}

@media screen and (min-width: 700px) {
  .nav {
    border-style: none;
  }
  .nav-item {
    background-color: rgba(0, 0, 0, 0);
  }
}
.subNav {
  color: #000000;
}
.subNav-item {
  background-color: #47a0f3;
  color: #000000;
}
.subNav-item:focus, .subNav-item:hover {
  color: #FFFFFF;
}

.menuButton {
  color: #000000;
  background-color: #9ac6ff;
  border: 2px solid #000000;
}
.menuButton:focus, .menuButton:hover {
  color: #000000;
  background-color: #47a0f3;
}

.themeMenu {
  border: 2px solid #000000;
  color: #000000;
  background-color: #9ac6ff;
}
.themeMenu h2 {
  color: #000000;
}
.themeMenu button {
  color: #000000;
  background-color: rgba(0, 0, 0, 0);
}
.themeMenu button:focus, .themeMenu button:hover {
  color: #006d8f;
}

.fontMenu {
  color: #000000;
  background-color: #9ac6ff;
  border: 2px solid #000000;
}
.fontMenu h2 {
  color: #000000;
}
.fontMenu button {
  color: #000000;
  background-color: rgba(0, 0, 0, 0);
}
.fontMenu button:focus, .fontMenu button:hover {
  color: #006d8f;
}

.text15px {
  color: #000000;
}

.text20px {
  color: #000000;
}

.text25px {
  color: #000000;
}

.text30px {
  color: #000000;
}

.setOutline {
  -webkit-text-stroke: 10px #FFFFFF;
}

.bottomNav > a {
  background-color: #47a0f3;
}
.bottomNav > a:focus, .bottomNav > a:hover {
  color: #FFFFFF;
}

.--color {
  border-color: #000000;
}

.primary {
  background-color: #9ac6ff;
}

.primaryVariant {
  background-color: #6896cc;
}

.secondary {
  background-color: #03DAC6;
}

.secondaryVariant {
  background-color: #006d8f;
}

.background {
  background-color: #FFFFFF;
}

.surface {
  background-color: #47a0f3;
}

.error {
  background-color: #B00020;
}

.onPrimary {
  background-color: #000000;
}

.onSecondary {
  background-color: #000000;
}

.onBackground {
  background-color: #000000;
}

.onSurface {
  background-color: #000000;
}

.onError {
  background-color: #FFFFFF;
}/*# sourceMappingURL=light.css.map */